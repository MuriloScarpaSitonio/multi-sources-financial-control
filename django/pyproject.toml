[project]
name = "multi-sources-financial-control"
version = "0.1.0"
description = ""
authors = [{ name = "Your Name", email = "you@example.com" }]
requires-python = "~=3.13.0"
dependencies = [
    "Django>=5.2.3,<6",
    "aiohttp>=3.9.0,<4",
    "asgiref>=3.7.2,<4",
    "cryptography>=42.0.0,<43",
    "django-anymail[brevo]~=10.1",
    "django-choices>=1.7.2,<2",
    "django-cors-headers>=4.3.0,<5",
    "django-filter~=24.0",
    "djangorestframework>=3.15.0,<4",
    "djangorestframework-simplejwt>=5.3.0,<6",
    "drf-spectacular>=0.27.0,<1",
    "pydantic>=2.5.0,<3",
    "python-dateutil>=2.8.2,<3",
    "python-decouple~=3.8",
    "redis>=5.0.0,<6",
    "requests>=2.31.0,<3",
    "stripe>=7.8.0,<8",
]

[dependency-groups]
dev = [
    "PyDrive2>=1.17.0,<2",
    "aioresponses>=0.7.4,<0.8",
    "bandit>=1.7.5,<2",
    "black>=24.0.0,<25",
    "factory-boy>=3.3.0,<4",
    "freezegun>=1.2.2,<2",
    "locust>=2.20.0,<3",
    "pylint-django>=2.5.3,<3",
    "pylint-runner>=0.6.0,<0.7",
    "pytest>=8.0.0,<9",
    "pytest-cov>=4.1.0,<5",
    "pytest-django>=4.8.0,<5",
    "pytest-env>=0.8.2,<0.9",
    "pytest-freezegun>=0.4.2,<0.5",
    "pytest-mock>=3.12.0,<4",
    "pytest-redis>=3.0.2,<4",
    "pytest-sugar>=0.9.7,<0.10",
    "pytest-xdist>=3.5.0,<4",
    "requests-mock>=1.11.0,<2",
    "ruff>=0.2.0,<1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
extend-ignore = ["B032"]
line-length = 100
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "B", # flake8-bugbear 
  "G", # flake8-logging-format
  "SIM", # flake8-simplify 
  "C4", # flake8-comprehensions
  "ASYNC", # flake8-async
  "UP", # pyupgrade
  "DJ", # flake8-django
]
# Exclude a variety of commonly ignored directories.
exclude = ["migrations"]

[tool.ruff.per-file-ignores]
"*settings*" = ["F403", "F405"]
"__init__.py" = ["F401", "F403"]
"conftest.py" = ["F401", "F811"]
"test_*.py" = ["F401", "F811"]

[tool.ruff.isort]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]

[tool.ruff.isort.sections]
django = ["django"]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.black]
exclude = """
/(
  | migrations
)/

"""
line-length = 100

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.base"
addopts = "--basetemp=/tmp/pytest"
env = ["ENVIRONMENT=pytest"]
filterwarnings = ["ignore::DeprecationWarning:pytest_freezegun.*:"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.coverage.run]
omit = [
  "*apps.py",
  "*/migrations/*",
  "*/settings/*",
  "*/tests/*",
  "*urls.py",
  "*wsgi*",
  "*asgi*",
  "manage.py",
  "locustfile.py",
  "backup_dbs.py",
  "*scripts*",
]
parallel = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "@abstractmethod",
  "@overload",
  "def __str__",
]
fail_under = 94

[tool.hatch.build.targets.wheel]
packages = [
    "authentication",
    "config", 
    "expenses",
    "shared",
    "tasks",
    "variable_income_assets"
]
exclude = [
    "*/migrations/*",
    "*/tests/*",
    "*/management/*",
    "manage.py",
    "locustfile.py",
    "entrypoint.sh",
    "Dockerfile.local",
    "Makefile",
    ".gitignore",
    ".pylintrc"
]
