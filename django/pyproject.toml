[tool.poetry]
authors = ["Your Name <you@example.com>"]
description = ""
name = "multi-sources-financial-control"
version = "0.1.0"

[tool.poetry.dependencies]
Django = "^4.2.2"
aiohttp = "^3.8.4"
asgiref = "^3.7.2"
cryptography = "^41.0.1"
django-choices = "^1.7.2"
django-cors-headers = "3.8.0"
django-filter = "^23.2"
djangorestframework = "^3.14.0"
djangorestframework-simplejwt = "^5.2.2"
drf-spectacular = "0.17.3"
pydantic = "==2.*"
python = "^3.8"
python-dateutil = "^2.8.2"
python-decouple = "^3.8"
redis = "^4.6.0"
requests = "2.26.0"

[tool.poetry.group.dev.dependencies]
PyDrive2 = "^1.15.4"
aioresponses = "^0.7.4"
bandit = "^1.7.5"
black = "^23.3.0"
factory-boy = "^3.2.1"
freezegun = "^1.2.2"
locust = "^2.15.1"
pylint-django = "^2.5.3"
pylint-runner = "^0.6.0"
pytest = "7.4.0"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-env = "^0.8.2"
pytest-freezegun = "^0.4.2"
pytest-mock = "^3.10.0"
pytest-redis = "^3.0.2"
pytest-sugar = "^0.9.7"
pytest-xdist = "^3.1.0"
requests-mock = "^1.10.0"
ruff = "^0.0.280"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.ruff]
extend-ignore = ["B032"]
line-length = 100
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "B", # flake8-bugbear 
  "G", # flake8-logging-format
  "SIM", # flake8-simplify 
  "C4", # flake8-comprehensions
  "ASYNC", # flake8-async
  "UP", # pyupgrade
  "DJ", # flake8-django
]
# Exclude a variety of commonly ignored directories.
exclude = ["migrations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"conftest.py" = ["F401", "F811"]
"test_*.py" = ["F401", "F811"]

[tool.ruff.isort]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]

[tool.ruff.isort.sections]
django = ["django"]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.black]
exclude = """
/(
  | migrations
)/

"""
line-length = 100

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.base"
addopts = "--basetemp=/tmp/pytest"
env = ["ENVIRONMENT=pytest"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.coverage.run]
omit = [
  "*apps.py",
  "*/migrations/*",
  "*settings*",
  "*/tests/*",
  "*urls.py",
  "*wsgi*",
  "*asgi*",
  "manage.py",
  "locustfile.py",
  "backup_dbs.py",
  "*scripts*",
]
parallel = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "@abstractmethod",
  "@overload",
  "def __str__",
]
fail_under = 96
